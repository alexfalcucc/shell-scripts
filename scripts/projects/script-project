#!/bin/bash
set -euo pipefail

# USAGE
# script-project package hello-world "A CLI to say Hello World"
# script-project {project_type} {name} {description}
#   {project_type} should be "app" or "package"
#     "app" is currently a zeit next app
#     "package" is currently a yarn package for the npm registry
#   {name} should be a slug like "hello-world"
#   {description} should be a short sentence like "A CLI to say Hello World"

task="Generating a project"

script-log state "$task"


# ==================================================================
# VARIABLES
# ==================================================================

template_path=$HOME/drive/settings/scripts/main/projects/
user_name="trevordmiller"
user_full_name="Trevor D. Miller"
user_email="trevordmiller@icloud.com"
user_website="http://www.trevordmiller.com"
project_year=$(date +"%Y")
project_type=$1
project_name=$2
project_description=$3


# ==================================================================
# TEMPLATES
# ==================================================================

script-log state "Generating files and folders"
mkdir "$project_name"
cd !$
cp -a "$template_path"/shared/. ./
case "$project_type" in 
  "app" ) 
    cp -a "$template_path"/app/. ./
    ;; 
  "package" ) 
    cp -a "$template_path"/package/. ./
    ;; 
esac

# VARIABLE SUBSTITUTION
grep -rl '%substitute' . --exclude-dir=node_modules | xargs sed -i '' \
-e "s|%substitute_user_name|$user_name|g" \
-e "s|%substitute_user_full_name|$user_full_name|g" \
-e "s|%substitute_user_email|$user_email|g" \
-e "s|%substitute_user_website|$user_website|g" \
-e "s|%substitute_project_year|$project_year|g" \
-e "s|%substitute_project_name|$project_name|g" \
-e "s|%substitute_project_description|$project_description|g" 


# ==================================================================
# DEPENDENCIES
# ==================================================================

script-log state "Installing dependencies"
case "$project_type" in 
  "app" )
    yarn add next
    yarn add --dev babel-preset-latest babel-preset-react eslint eslint-plugin-react jest watch parallelshell
    ;;
  "package" ) 
    yarn add --dev babel-cli babel-preset-latest eslint jest watch parallelshell
    ;; 
esac


# ==================================================================
# SOURCE CONTROL
# ==================================================================

script-log state "Adding source control"
git init
git add -A
git commit -m "Scaffold project"
script-log action "Enter GitHub password"
curl -u "$user_name" https://api.github.com/user/repos -d "{\"name\":\"$project_name\", \"description\":\"$project_description\"}"
sleep 3
git remote add origin https://github.com/"$user_name"/"$project_name".git
git push -u origin master


# ==================================================================
# CONTINUOUS INTEGRATION & DEPLOYMENT
# ==================================================================

script-log state "Initializing continuous integration and deployment"
travis enable -r "$user_name"/"$project_name"
case "$project_type" in 
  "app" )
    now
    ;;
  "package" ) 
    yarn publish
    script-log action "Enter deployment details"
    travis setup npm
    git add -A
    git commit -m "Add continous deployment"
    git push
    ;; 
esac


# ==================================================================
# MANUAL SETUP
# ==================================================================
script-log action "MANUAL SETUP"
script-log action "TODO: Protect master branch"
open "https://github.com/$user_name/$project_name/settings/branches"
case "$project_type" in 
  "app" ) 
    script-log action "TODO: Add Guages analytics"
    open "https://secure.gaug.es/dashboard"
    script-log action "TODO: Add Sentry error tracking"
    open "https://sentry.io/$user_name/"
    ;; 
esac


# ==================================================================
# RESULTS
# ==================================================================

script-log state "Opening results"
open "https://github.com/$user_name/$project_name"
open "https://travis-ci.org/$user_name/$project_name"
case "$project_type" in 
  "app" ) 
    open "$(pbpaste)"
    ;; 
  "package" )
    open "https://www.npmjs.com/package/$project_name"
    ;;
esac


# ==================================================================
"$project_name"
script-log state "DONE $task"
